<?php
function repositoryworksearch_search_info(){
    return array(
    'title' => 'Works',
    'path' => 'works',
    'conditions_callback' => 'repository_callback_search_conditions',
  );
}
function repositoryworksearch_form_search_form_alter(&$form, &$form_state) {
  $formFields = array('workTitle','name','description');
  $fieldLabels = array('Title', 'Short Name', 'Description');
   
  if (isset($form['module']) && $form['module']['#value'] == 'repositoryworksearch' && user_access('use advanced search')) {
    $form['advanced'] = array(
      '#type' => 'fieldset',
      '#title' => t('Advanced search'),
      '#collapsible' => TRUE,
      '#collapsed' => TRUE,
      '#attributes' => array('class' => array('search-advanced')),
    );
    foreach ($formFields as $i => $f){
      $form['advanced'][$f] = array(
      '#type' => 'textfield',
      '#title' => t($fieldLabels[$i])
      );
    }
    $form['advanced']['submit'] = array(
      '#type' => 'submit',
      '#value' => t('Advanced search'),
      '#weight' => 100,
      '#prefix' => '<div class="action">',
      '#suffix' => '</div>'
    );
    // avoid using default validator because it does not allow empty basic search keywords
    $form['#validate'] = array('repositoryworksearch_search_form_validate');
  }
}
function repositoryworksearch_search_form_validate($form, &$form_state) {
  $formFields = array('workTitle','name','description');
  // Initialize using any existing basic search keywords.
  $keys = $form_state['values']['keys'];
  // Insert extra restrictions into the search keywords string.
  foreach ($formFields as $f){
    if (isset($form_state['values'][$f]) && strlen($form_state['values'][$f]) > 0) {
      $keys = search_expression_insert($keys, $f, $form_state['values'][$f]);
    }
  }
  if (!empty($keys)) {
    form_set_value($form['basic']['processed_keys'], trim($keys), $form_state);
  }
}
function repositoryworksearch_search_execute($keys = NULL, $conditions = NULL){
    $tempKeys = $keys;
    $formFields = array('workTitle','name','description');
    $searchFields = array();
    foreach ($formFields as $f){
      $searchFields[$f] = search_expression_extract($tempKeys, $f);
      $tempKeys = search_expression_insert($tempKeys,$f);
    }
    $searchTerm = $tempKeys;
    $project = null;
    if (ISSET($conditions['project'])){
        $project = $conditions['project'];
    }
    $searchResults = _findRecords("works",array("workTitle","name"),100, 0, 1, $searchTerm,null,$project);
    $results = array();
    foreach ($searchResults as $obj){
      $numrev = count($obj['_revisions']) - 1;

      $id = $obj['_id'];
      $metadata = $obj['_revisions'][$numrev];
      // generate uri
      $uri = 'repository/works/' . $id->{'$id'};
      $snippet = "";
      if (ISSET($metadata['description'])){
          $snippet = text_summary($metadata['description']);
      }
      $results [] = array(
        'link' => url($uri, array('absolute' => TRUE)),
          'type' => 'Work',
          'title' => $metadata['workTitle'] . ' ' . $metadata['name'],
          'user' => "",
          'date' => "",
          'extra' => null,
          'snippet' => $snippet
        );
     }
    return $results;
}