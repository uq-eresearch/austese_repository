<?php
function repositoryeventsearch_search_info(){
    return array(
    'title' => 'Events',
    'path' => 'events',
    'conditions_callback' => 'repository_callback_search_conditions',
  );
}
function repositoryeventsearch_form_search_form_alter(&$form, &$form_state) {
  $formFields = array('name','description','references','eventType','startDate','endDate','eventTags');
  $fieldLabels = array('Name', 'Description','References','Type','Began','Ended','Tags');
   
  if (isset($form['module']) && $form['module']['#value'] == 'repositoryeventsearch' && user_access('use advanced search')) {
    $form['advanced'] = array(
      '#type' => 'fieldset',
      '#title' => t('Advanced search'),
      '#collapsible' => TRUE,
      '#collapsed' => TRUE,
      '#attributes' => array('class' => array('search-advanced')),
    );
   foreach ($formFields as $i => $f){
      $form['advanced'][$f] = array(
      '#type' => 'textfield',
      '#title' => t($fieldLabels[$i])
      );
    }
    $form['advanced']['submit'] = array(
      '#type' => 'submit',
      '#value' => t('Advanced search'),
      '#weight' => 100,
      '#prefix' => '<div class="action">',
      '#suffix' => '</div>'
    );
    // avoid using default validator because it does not allow empty basic search keywords
    $form['#validate'] = array('repositoryeventsearch_search_form_validate');
  }
}
function repositoryeventsearch_search_form_validate($form, &$form_state) {
  $formFields = array('name','description','references','eventType','startDate','endDate','eventTags');
  // Initialize using any existing basic search keywords.
  $keys = $form_state['values']['keys'];
  // Insert extra restrictions into the search keywords string.
  foreach ($formFields as $f){
    if (isset($form_state['values'][$f]) && strlen($form_state['values'][$f]) > 0) {
      $keys = search_expression_insert($keys, $f, $form_state['values'][$f]);
    }
  }
  if (!empty($keys)) {
    form_set_value($form['basic']['processed_keys'], trim($keys), $form_state);
  }
}
function repositoryeventsearch_search_execute($keys = NULL, $conditions = NULL){
    $tempKeys = $keys;
    $formFields = array('name','description','references','eventType','startDate','endDate','eventTags');
    $searchFields = array();
    foreach ($formFields as $f){
      $searchFields[$f] = search_expression_extract($tempKeys, $f);
      $tempKeys = search_expression_insert($tempKeys,$f);
    }
    $searchTerm = $tempKeys;
    $project = null;
    if (ISSET($conditions['project'])){
        $project = $conditions['project'];
    }
    $results = array();
    // check if search fields are not null
    if (count($searchFields) > 0){
        // advanced search
        $searchResults = repositoryapi_advancedElasticSearch('events', $searchFields, 50, 0, $project);
        //var_dump($searchResults);
        if ($searchResults['count'] > 0){
            if (ISSET($searchResults['results'])){
                foreach ($searchResults['results'] as $obj){
                  $id = $obj['id'];
                  $metadata = $obj;
                    // generate uri
                  $uri = 'repository/events/' . $id;
                  $snippet = "";
                  if (ISSET($metadata['description'])){
                      $snippet = text_summary($metadata['description']);
                  }
                  $results [] = array(
                    'link' => url($uri, array('absolute' => TRUE)),
                      'type' => 'Event',
                      'title' => $name,
                      'user' => "",
                      'date' => "",
                      'extra' => array($metadata['startDate'],$metadata['endDate']),
                      'snippet' => $snippet
                 );
                }
            }
        }
        
    } else {
        $searchResults = _findRecords("events",array('name','description'),100, 0, 1, $searchTerm, null,$project);
        
        foreach ($searchResults as $obj){
          $numrev = count($obj['_revisions']) - 1;
    
          $id = $obj['_id'];
          $metadata = $obj['_revisions'][$numrev];
          // generate uri
          $uri = 'repository/events/' . $id->{'$id'};
          if ($metadata['name']){
              $name = $metadata['name'];
          } else {
              $name = "Untitled Event";
          }
          $snippet = "";
          if (ISSET($metadata['description'])){
              $snippet = text_summary($metadata['description']);
          }
          $results [] = array(
            'link' => url($uri, array('absolute' => TRUE)),
              'type' => 'Event',
              'title' => $name,
              'user' => "",
              'date' => "",
              'extra' => array($metadata['startDate'],$metadata['endDate']),
              'snippet' => $snippet
            );
         }
    }
    return $results;
}